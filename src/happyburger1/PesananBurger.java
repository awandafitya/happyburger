package happyburger1;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


public class PesananBurger extends javax.swing.JInternalFrame {
    DefaultTableModel model;
    private Statement st;
    private Connection connection;


    /**
     * Creates new form PesananBurger
     */
    public PesananBurger() {
        initComponents();
        model = (DefaultTableModel) TabelPesanan.getModel();
        connection = new Koneksi().conn; // Menggunakan koneksi yang sudah ada
        populateTable();
        refreshTable();
    }

    private void populateTable() {
        // Mengambil data dari database dan menambahkannya ke dalam tabel
        try {
            String query = "SELECT * FROM pesanan";
            try (Statement stmt = connection.createStatement(); ResultSet rs = stmt.executeQuery(query)) {
                while (rs.next()) {
                    String ID_Pesanan = rs.getString("ID_Pesanan");
                    String ID_Customer = rs.getString("ID_Customer");
                    String ID_Pegawai = rs.getString("ID_Pegawai");
                    String ID_Meja = rs.getString("ID_Meja");
                    String ID_Detail_Pesanan = rs.getString("ID_Detail_Pesanan");
                    String Tanggal_waktu_transaksi = rs.getString("Tanggal_waktu_transaksi");
                    String Total_harga_pesanan = rs.getString("Total_harga_pesanan");

                    model.addRow(new Object[]{ID_Pesanan, ID_Customer, ID_Pegawai, ID_Meja, ID_Detail_Pesanan, Tanggal_waktu_transaksi, Total_harga_pesanan});
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data dari database.");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        id_pesanan = new javax.swing.JTextField();
        id_cust = new javax.swing.JTextField();
        id_peg = new javax.swing.JTextField();
        id_me = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        totalhrgpsn = new javax.swing.JTextField();
        simpanperubahan = new javax.swing.JButton();
        simpandata = new javax.swing.JButton();
        bersihkan = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelPesanan = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        edit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        pilihIdCust = new javax.swing.JButton();
        pilihIdPeg = new javax.swing.JButton();
        PilihIdMeja = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        id_dt = new javax.swing.JTextField();
        PilihIdDetailTransaksi = new javax.swing.JButton();
        tgl_waktu_transaksi = new com.toedter.calendar.JDateChooser();

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 255));
        jLabel10.setText("Total_harga_pesanan");

        id_pesanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_pesananActionPerformed(evt);
            }
        });

        id_cust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_custActionPerformed(evt);
            }
        });

        id_peg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_pegActionPerformed(evt);
            }
        });

        id_me.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_meActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("Pesanan");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setText("ID_Pesanan");

        totalhrgpsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalhrgpsnActionPerformed(evt);
            }
        });

        simpanperubahan.setBackground(new java.awt.Color(153, 153, 255));
        simpanperubahan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        simpanperubahan.setForeground(new java.awt.Color(255, 255, 255));
        simpanperubahan.setText("Simpan Perubahan");
        simpanperubahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanperubahanActionPerformed(evt);
            }
        });

        simpandata.setBackground(new java.awt.Color(153, 153, 255));
        simpandata.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        simpandata.setForeground(new java.awt.Color(255, 255, 255));
        simpandata.setText("Simpan Data");
        simpandata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpandataActionPerformed(evt);
            }
        });

        bersihkan.setBackground(new java.awt.Color(153, 153, 255));
        bersihkan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bersihkan.setForeground(new java.awt.Color(255, 255, 255));
        bersihkan.setText("Bersihkan");
        bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bersihkanActionPerformed(evt);
            }
        });

        hapus.setBackground(new java.awt.Color(153, 153, 255));
        hapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hapus.setForeground(new java.awt.Color(255, 255, 255));
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        TabelPesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_Pesanan", "ID_Customers", "ID_Pegawai", "ID_Meja", "ID_Detail_Transaksi", "Tanggal_waktu_pemesanan", "Total_harga pesanan"
            }
        ));
        jScrollPane1.setViewportView(TabelPesanan);
        if (TabelPesanan.getColumnModel().getColumnCount() > 0) {
            TabelPesanan.getColumnModel().getColumn(0).setHeaderValue("ID_Pesanan");
            TabelPesanan.getColumnModel().getColumn(1).setResizable(false);
            TabelPesanan.getColumnModel().getColumn(1).setHeaderValue("ID_Customers");
            TabelPesanan.getColumnModel().getColumn(2).setResizable(false);
            TabelPesanan.getColumnModel().getColumn(2).setHeaderValue("ID_Pegawai");
            TabelPesanan.getColumnModel().getColumn(3).setHeaderValue("ID_Meja");
            TabelPesanan.getColumnModel().getColumn(4).setResizable(false);
            TabelPesanan.getColumnModel().getColumn(4).setHeaderValue("ID_Detail_Transaksi");
            TabelPesanan.getColumnModel().getColumn(5).setHeaderValue("Tanggal_waktu_pemesanan");
            TabelPesanan.getColumnModel().getColumn(6).setResizable(false);
            TabelPesanan.getColumnModel().getColumn(6).setHeaderValue("Total_harga pesanan");
        }

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 255));
        jLabel3.setText("ID_Customer");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 255));
        jLabel4.setText("ID_Pegawai");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 255));
        jLabel5.setText("ID_Meja");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 255));
        jLabel8.setText("Tanggal_waktu_transaksi");

        edit.setBackground(new java.awt.Color(153, 153, 255));
        edit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(51, 51, 255));
        back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        pilihIdCust.setBackground(new java.awt.Color(153, 153, 255));
        pilihIdCust.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pilihIdCust.setForeground(new java.awt.Color(255, 255, 255));
        pilihIdCust.setText("+");
        pilihIdCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihIdCustActionPerformed(evt);
            }
        });

        pilihIdPeg.setBackground(new java.awt.Color(153, 153, 255));
        pilihIdPeg.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pilihIdPeg.setForeground(new java.awt.Color(255, 255, 255));
        pilihIdPeg.setText("+");
        pilihIdPeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihIdPegActionPerformed(evt);
            }
        });

        PilihIdMeja.setBackground(new java.awt.Color(153, 153, 255));
        PilihIdMeja.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        PilihIdMeja.setForeground(new java.awt.Color(255, 255, 255));
        PilihIdMeja.setText("+");
        PilihIdMeja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilihIdMejaActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 255));
        jLabel6.setText("ID_Detail_Transaksi");

        id_dt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_dtActionPerformed(evt);
            }
        });

        PilihIdDetailTransaksi.setBackground(new java.awt.Color(153, 153, 255));
        PilihIdDetailTransaksi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        PilihIdDetailTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        PilihIdDetailTransaksi.setText("+");
        PilihIdDetailTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilihIdDetailTransaksiActionPerformed(evt);
            }
        });

        tgl_waktu_transaksi.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tgl_waktu_transaksiAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalhrgpsn, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(id_cust, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pilihIdCust, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(id_peg, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pilihIdPeg, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(id_pesanan, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tgl_waktu_transaksi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(id_dt, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(id_me, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(PilihIdMeja, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGap(11, 11, 11)
                                                    .addComponent(PilihIdDetailTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(simpandata)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(simpanperubahan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(back))
                        .addGap(0, 916, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(id_pesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_cust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pilihIdCust)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_peg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(pilihIdPeg))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_me, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(PilihIdMeja))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(id_dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PilihIdDetailTransaksi))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(tgl_waktu_transaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(totalhrgpsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpanperubahan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpandata, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(back)
                .addGap(111, 111, 111))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void id_pesananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_pesananActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_pesananActionPerformed

    private void id_custActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_custActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_custActionPerformed

    private void id_pegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_pegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_pegActionPerformed

    private void id_meActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_meActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_meActionPerformed

    private void totalhrgpsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalhrgpsnActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_totalhrgpsnActionPerformed

    private void simpanperubahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanperubahanActionPerformed
        // TODO add your handling code here:
        String ID_Pesanan = id_pesanan.getText();
        String ID_Customer = id_cust.getText();
        String ID_Pegawai = id_peg.getText();
        String ID_Meja = id_me.getText();
        String ID_Detail_Pesanan = id_dt.getText();
        Date Tanggal = tgl_waktu_transaksi.getDate();
        String Total_Harga_Pesanan = totalhrgpsn.getText();

        try {
            // Convert the String to Double for total_harga_pesanan
            double totalHarga = Double.parseDouble(Total_Harga_Pesanan);

            String sql = "UPDATE pesanan SET id_customer=?, id_pegawai=?, id_meja=?, id_detail_pesanan=?, tanggal_waktu_transaksi=?, total_harga_pesanan=? WHERE id_pesanan=?";
            try (PreparedStatement pstmt = connection.prepareStatement(sql)) {
                pstmt.setString(1, ID_Customer);
                pstmt.setString(2, ID_Pegawai);
                pstmt.setString(3, ID_Meja);
                pstmt.setString(4, ID_Detail_Pesanan);

                // Check if a date is selected before trying to access its value
                if (Tanggal != null) {
                    pstmt.setDate(5, new java.sql.Date(Tanggal.getTime()));
                } else {
                    pstmt.setDate(5, null);  // or handle it according to your database schema
                }

                pstmt.setDouble(6, totalHarga);
                pstmt.setString(7, ID_Pesanan);

                int rowsUpdated = pstmt.executeUpdate();

                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menyimpan data. Periksa kembali inputan Anda.");
                }

                // Clear input fields and refresh table
                id_pesanan.setText("");
                id_cust.setText("");
                id_peg.setText("");
                id_me.setText("");
                ((JTextField) tgl_waktu_transaksi.getDateEditor().getUiComponent()).setText("");
                totalhrgpsn.setText("");
                refreshTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data.");
        }

    }

private void refreshTable() {
    try {
        // Mendapatkan koneksi dari objek Koneksi
        Koneksi koneksi = new Koneksi();
        Connection conn = koneksi.conn;

        // Menyiapkan pernyataan SQL untuk mengambil data dari database
        String sql = "SELECT * FROM pesanan";
        try (PreparedStatement pstmt = conn.prepareStatement(sql); ResultSet rs = pstmt.executeQuery()) {
            // Mengosongkan model tabel
            DefaultTableModel model = (DefaultTableModel) TabelPesanan.getModel();
            model.setRowCount(0);

            // Mengisi ulang data dari hasil query
            while (rs.next()) {
                    String ID_Pesanan = rs.getString("ID_Pesanan");
                    String ID_Customer = rs.getString("ID_Customer");
                    String ID_Pegawai = rs.getString("ID_Pegawai");
                    String ID_Meja = rs.getString("ID_Meja");
                    String ID_Detail_Pesanan = rs.getString("ID_Detail_Pesanan");
                    String Tanggal_waktu_transaksi = rs.getString("Tanggal_waktu_transaksi");
                    String Total_harga_pesanan = rs.getString("Total_harga_pesanan");

                    model.addRow(new Object[]{ID_Pesanan, ID_Customer, ID_Pegawai, ID_Meja, ID_Detail_Pesanan, Tanggal_waktu_transaksi, Total_harga_pesanan});
                }
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat merefresh tabel.");
    }
    }//GEN-LAST:event_simpanperubahanActionPerformed

    private void simpandataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpandataActionPerformed
        try {
        String query = "INSERT INTO pesanan (id_pesanan, id_customer, id_pegawai, id_meja, id_detail_pesanan, tanggal_waktu_transaksi, total_harga_pesanan) VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmt = connection.prepareStatement(query);
 Date Tanggal = tgl_waktu_transaksi.getDate();
 
        pstmt.setString(1, id_pesanan.getText());
        pstmt.setString(2, id_cust.getText());
        pstmt.setString(3, id_peg.getText());
        pstmt.setString(4, id_me.getText());
        pstmt.setString(5, id_dt.getText());
        pstmt.setDate(6, new java.sql.Date (Tanggal.getTime()));
    float totalHarga = Float.parseFloat(totalhrgpsn.getText());
pstmt.setFloat(7, totalHarga);

      

      
        pstmt.executeUpdate();
        pstmt.close();

        // Menyegarkan tabel setelah menambahkan data baru
        model.setRowCount(0);
        populateTable();

        // Refresh tabel
        refreshTable();
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data dari database.");
    }
    }//GEN-LAST:event_simpandataActionPerformed

    private void bersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bersihkanActionPerformed
        clearFields();
    }//GEN-LAST:event_bersihkanActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        int selectedRow = TabelPesanan.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                String ID_Layanan = (String) model.getValueAt(selectedRow, 0);

                String query = "DELETE FROM pesanan WHERE id_pesanan = ?";
                PreparedStatement pstmt = connection.prepareStatement(query);
                pstmt.setString(1, ID_Layanan);
                pstmt.executeUpdate();
                pstmt.close();

                // Meid_pegawaian tabel setelah menghapus data
                model.setRowCount(0);
                populateTable();
            } catch (Exception e) {
                e.printStackTrace();
            }
            // Refresh tabel
            refreshTable();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus!");
        }
    }//GEN-LAST:event_hapusActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        Dashboard brd = new Dashboard(); 
        brd.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        brd.pack();
        brd.setVisible(true);

        // Tutup form 
        JFrame thisFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        thisFrame.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int selectedRow = TabelPesanan.getSelectedRow();
    if (selectedRow >= 0) {
        // Ambil data dari baris yang dipilih
        String ID_Pesanan = (String) model.getValueAt(selectedRow, 0);
        String ID_Customer = (String) model.getValueAt(selectedRow, 1);
        String ID_Pegawai = (String) model.getValueAt(selectedRow, 2);
        String ID_Meja = (String) model.getValueAt(selectedRow, 3);
        String ID_Detail_Pesanan = (String) model.getValueAt(selectedRow, 4);
        String Tanggal_waktu_transaksi = (String) model.getValueAt(selectedRow, 5);
        String Total_harga_pesanan = (String) model.getValueAt(selectedRow, 6);

        // Tampilkan data pada form
        id_pesanan.setText(ID_Pesanan);
        id_cust.setText(ID_Customer);
        id_peg.setText(ID_Pegawai);
        id_me.setText(ID_Meja);
        id_dt.setText(ID_Detail_Pesanan);
        
        if (Tanggal_waktu_transaksi != null && !Tanggal_waktu_transaksi.isEmpty()) {
            ((JTextField) tgl_waktu_transaksi.getDateEditor().getUiComponent()).setText(Tanggal_waktu_transaksi);
        }
        totalhrgpsn.setText(Total_harga_pesanan);

        // Disesuaikan dengan logika update yang sesuai dengan struktur tabel dan kebutuhan Anda
        try {
            String query = "UPDATE pesanan SET id_customer=?, id_pegawai=?, id_meja=?, id_detail_pesanan=?, tanggal_waktu_transaksi=?, total_harga_pesanan=? WHERE id_pesanan=?";
            try (PreparedStatement pstmt = connection.prepareStatement(query)) {
                pstmt.setString(1, id_cust.getText());
                pstmt.setString(2, id_peg.getText());
                pstmt.setString(3, id_me.getText());
                pstmt.setString(4, id_dt.getText());
                
                // Check if a date is selected before trying to access its value
                if (tgl_waktu_transaksi.getDate() != null) {
                    pstmt.setDate(5, new java.sql.Date(tgl_waktu_transaksi.getDate().getTime()));
                } else {
                    pstmt.setDate(5, null);  // or handle it according to your database schema
                }

                pstmt.setString(6, totalhrgpsn.getText());
                pstmt.setString(7, id_pesanan.getText());

                // Rest of your code remains the same...
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memperbarui data.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan diedit!");
    }
    }//GEN-LAST:event_editActionPerformed

    private void pilihIdCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihIdCustActionPerformed
        // TODO add your handling code here:
        IdCust ic = new IdCust(null,true); 
        ic.setVisible(true);
        id_cust.setText(ic.ID_Customer);
        
    }//GEN-LAST:event_pilihIdCustActionPerformed

    private void pilihIdPegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihIdPegActionPerformed
        // TODO add your handling code here:
        IdPeg ip = new IdPeg(null,true); 
        ip.setVisible(true);
        id_peg.setText(ip.idPegawai);
    }//GEN-LAST:event_pilihIdPegActionPerformed

    private void PilihIdMejaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilihIdMejaActionPerformed
        // TODO add your handling code here:
        IdMe im = new IdMe(null,true); 
        im.setVisible(true);
        id_me.setText(im.idMeja);
    }//GEN-LAST:event_PilihIdMejaActionPerformed

    private void clearFields() {
    id_pesanan.setText("");
    id_cust.setText("");
    id_peg.setText("");
    id_me.setText("");
    ((JTextField)tgl_waktu_transaksi.getDateEditor().getUiComponent()).setText("");
    totalhrgpsn.setText("");
}
    private void PilihIdDetailTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilihIdDetailTransaksiActionPerformed
        // TODO add your handling code here:
        IdDT id = new IdDT(null,true); 
        id.setVisible(true);
        id_dt.setText(id.idDetail);
        totalhrgpsn.setText(id.Sub_Total);
        
    }//GEN-LAST:event_PilihIdDetailTransaksiActionPerformed

    private void id_dtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_dtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_dtActionPerformed

    private void tgl_waktu_transaksiAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tgl_waktu_transaksiAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tgl_waktu_transaksiAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PilihIdDetailTransaksi;
    private javax.swing.JButton PilihIdMeja;
    private javax.swing.JTable TabelPesanan;
    private javax.swing.JButton back;
    private javax.swing.JButton bersihkan;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField id_cust;
    private javax.swing.JTextField id_dt;
    private javax.swing.JTextField id_me;
    private javax.swing.JTextField id_peg;
    private javax.swing.JTextField id_pesanan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pilihIdCust;
    private javax.swing.JButton pilihIdPeg;
    private javax.swing.JButton simpandata;
    private javax.swing.JButton simpanperubahan;
    private com.toedter.calendar.JDateChooser tgl_waktu_transaksi;
    private javax.swing.JTextField totalhrgpsn;
    // End of variables declaration//GEN-END:variables
}
