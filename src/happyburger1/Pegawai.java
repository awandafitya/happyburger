/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package happyburger1;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author damha
 */
public class Pegawai extends javax.swing.JInternalFrame {

    DefaultTableModel model;

    /**
     * Creates new form customers
     */
    public Pegawai() {
        initComponents();
        model = (DefaultTableModel) tabelPegawai.getModel();
        refreshTable();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idpegawai = new javax.swing.JTextField();
        namapegawai = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        bersihkan = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPegawai = new javax.swing.JTable();
        simpandata = new javax.swing.JButton();
        simpanperubahan = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        alamat = new javax.swing.JTextField();
        nohp = new javax.swing.JTextField();
        jabatan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(0, 0));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pengisian Data Pegawai Kasir", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe Print", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID Pegawai");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama Pegawai");

        idpegawai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idpegawaiActionPerformed(evt);
            }
        });

        namapegawai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namapegawaiActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(51, 51, 255));
        back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        bersihkan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bersihkan.setForeground(new java.awt.Color(153, 153, 255));
        bersihkan.setText("Bersihkan");
        bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bersihkanActionPerformed(evt);
            }
        });

        hapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hapus.setForeground(new java.awt.Color(153, 153, 255));
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        tabelPegawai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Pegawai", "Nama Pegawai", "Jabatan", "Alamat", "Nomor HP Pegawai"
            }
        ));
        tabelPegawai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPegawaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPegawai);

        simpandata.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        simpandata.setForeground(new java.awt.Color(153, 153, 255));
        simpandata.setText("Simpan Data");
        simpandata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpandataActionPerformed(evt);
            }
        });

        simpanperubahan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        simpanperubahan.setForeground(new java.awt.Color(153, 153, 255));
        simpanperubahan.setText("Simpan Perubahan");
        simpanperubahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanperubahanActionPerformed(evt);
            }
        });

        edit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        edit.setForeground(new java.awt.Color(153, 153, 255));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        jabatan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kasir", "Pramusaji", "Koki", "Kurir" }));
        jabatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jabatanActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Jabatan");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Alamat");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("No HP Pegawai");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(simpandata, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(simpanperubahan, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(alamat)
                                .addComponent(nohp, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addComponent(back))
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idpegawai, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                            .addComponent(namapegawai)
                            .addComponent(jabatan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(74, 74, 74)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idpegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(namapegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jabatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nohp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpandata, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpanperubahan, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(58, 58, 58))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("Pengisian Data Diri Kasir");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateTable() {
        try {
            // Mendapatkan koneksi dari objek Koneksi
            Koneksi koneksi = new Koneksi();
            Connection conn = koneksi.conn;

            // Menyiapkan pernyataan SQL untuk mengambil data dari database
            String sql = "SELECT * FROM pegawai";
            try ( java.sql.Statement stmt = conn.createStatement()) {
                // Mengosongkan model tabel
                DefaultTableModel model = (DefaultTableModel) tabelPegawai.getModel();
                model.setRowCount(0);

                // Mengisi ulang data dari hasil query
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    String idPegawai = rs.getString("id_pegawai");
                    String namaPegawai = rs.getString("nama_pegawai");
                    String Jabatan = rs.getString("jabatan");
                    String Alamat = rs.getString("alamat");
                    String noHP = rs.getString("nomor_hp_pegawai");

                    // Menambahkan data ke model tabel
                    model.addRow(new Object[]{idpegawai, namapegawai, jabatan, alamat, nohp});
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data dari database.");
        }

    }
    private void namapegawaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namapegawaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namapegawaiActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        Dashboard brd = new Dashboard();
        brd.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        brd.pack();
        brd.setVisible(true);

        // Tutup form 
        JFrame thisFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        thisFrame.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelPegawai.getSelectedRow();

        if (selectedRow == -1) {
            // Tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus!");
            return;
        }

        String idPegawai = (String) tabelPegawai.getValueAt(selectedRow, 0);

        try {
            // Mendapatkan koneksi dari objek Koneksi
            Koneksi koneksi = new Koneksi();
            Connection conn = koneksi.conn;

            // Menyiapkan pernyataan SQL untuk menghapus data
            String sql = "DELETE FROM pegawai WHERE id_pegawai=?";
            try ( PreparedStatement pstmt = conn.prepareStatement(sql)) {
                // Mengatur nilai parameter PreparedStatement
                pstmt.setString(1, idPegawai);

                // Menjalankan pernyataan hapus
                int rowsDeleted = pstmt.executeUpdate();

                // Memberikan informasi bahwa data telah dihapus
                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus data.");
                }

                // Refresh tabel setelah menghapus
                refreshTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data.");
        }

    }//GEN-LAST:event_hapusActionPerformed

    private void bersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bersihkanActionPerformed
        // TODO add your handling code here:
        idpegawai.setText("");
        namapegawai.setText("");
        jabatan.setSelectedItem("");
        alamat.setText("");
        nohp.setText("");

    }//GEN-LAST:event_bersihkanActionPerformed

    private void simpandataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpandataActionPerformed
        // TODO add your handling code here:
        String idPegawai = idpegawai.getText();
        String namaPegawai = namapegawai.getText();
        String Jabatan = (String) jabatan.getSelectedItem();
        String Alamat = alamat.getText();
        String noHP = nohp.getText();

        try {
            // Mendapatkan koneksi dari objek Koneksi
            Koneksi koneksi = new Koneksi();
            Connection conn = koneksi.conn;

            // Menyiapkan pernyataan SQL untuk menyimpan data
            String sql = "INSERT INTO pegawai (id_pegawai, nama_pegawai, jabatan, alamat, nomor_hp_pegawai) VALUES (?, ?, ?, ?, ?)";
            try ( PreparedStatement pstmt = conn.prepareStatement(sql)) {
                // Mengatur nilai parameter PreparedStatement
                pstmt.setString(1, idPegawai);
                pstmt.setString(2, namaPegawai);
                pstmt.setString(3, Jabatan);
                pstmt.setString(4, Alamat);
                pstmt.setString(5, noHP);

                // Menjalankan pernyataan simpan
                pstmt.executeUpdate();

                // Memberikan informasi bahwa data telah disimpan
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");

                // Setelah menyimpan, bersihkan inputan
                idpegawai.setText("");
                namapegawai.setText("");
                jabatan.setSelectedItem("");
                alamat.setText("");
                nohp.setText("");

                refreshTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data.");
        }
    }//GEN-LAST:event_simpandataActionPerformed

    private void simpanperubahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanperubahanActionPerformed
        // TODO add your handling code here:
        String idPegawai = idpegawai.getText();
        String namaPegawai = namapegawai.getText();
        String Jabatan = (String) jabatan.getSelectedItem();
        String Alamat = alamat.getText();
        String noHP = nohp.getText();

        try {
            // Mendapatkan koneksi dari objek Koneksi
            Koneksi koneksi = new Koneksi();
            Connection conn = koneksi.conn;

            // Menyiapkan pernyataan SQL untuk mengupdate data
            String sql = "UPDATE pegawai SET nama_pegawai=?, jabatan=?, alamat=?, nomor_hp_pegawai=? WHERE id_pegawai=?";
            try ( PreparedStatement pstmt = conn.prepareStatement(sql)) {
                // Mengatur nilai parameter PreparedStatement
                pstmt.setString(1, namaPegawai);
                pstmt.setString(2, Jabatan);
                pstmt.setString(3, Alamat);
                pstmt.setString(4, noHP);
                pstmt.setString(5, idPegawai);

                // Menjalankan pernyataan update
                int rowsUpdated = pstmt.executeUpdate();

                // Memberikan informasi bahwa data telah diupdate
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mengupdate data. Periksa kembali inputan Anda.");
                }

                // Setelah mengupdate, bersihkan inputan
                idpegawai.setText("");
                namapegawai.setText("");
                jabatan.setSelectedItem("");
                alamat.setText("");
                nohp.setText("");

                // Refresh tabel
                refreshTable();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengupdate data.");
        }
    }

    private void refreshTable() {
        try {
            // Mendapatkan koneksi dari objek Koneksi
            Koneksi koneksi = new Koneksi();
            Connection conn = koneksi.conn;

            // Menyiapkan pernyataan SQL untuk mengambil data dari database
            String sql = "SELECT * FROM pegawai";

            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();
            // Mengosongkan model tabel
            DefaultTableModel model = (DefaultTableModel) tabelPegawai.getModel();
            model.setRowCount(0);

            // Mengisi ulang data dari hasil query
            while (rs.next()) {

                // Menambahkan data ke model tabel
                model.addRow(new Object[]{rs.getString("id_pegawai"), rs.getString("nama_pegawai"), rs.getString("jabatan"), rs.getString("alamat"), rs.getString("nomor_hp_Pegawai")});

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat merefresh tabel.");
        }

    }//GEN-LAST:event_simpanperubahanActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelPegawai.getSelectedRow();

        // Pastikan baris terpilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan diedit.");
            return;
        }

        // Mendapatkan nilai kolom dari baris terpilih
        String idPegawai = tabelPegawai.getValueAt(selectedRow, 0).toString();
        String namaPegawai = tabelPegawai.getValueAt(selectedRow, 1).toString();
        String Jabatan = tabelPegawai.getValueAt(selectedRow, 2).toString();
        String Alamat = tabelPegawai.getValueAt(selectedRow, 3).toString();
        String noHP = tabelPegawai.getValueAt(selectedRow, 4).toString();

        // Menampilkan nilai saat ini pada inputan
        idpegawai.setText("");
        namapegawai.setText("");
        jabatan.setSelectedItem("");
        alamat.setText("");
        nohp.setText("");

    }//GEN-LAST:event_editActionPerformed

    private void jabatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jabatanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jabatanActionPerformed

    private void tabelPegawaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPegawaiMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tabelPegawaiMouseClicked

    private void idpegawaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idpegawaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idpegawaiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamat;
    private javax.swing.JButton back;
    private javax.swing.JButton bersihkan;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField idpegawai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jabatan;
    private javax.swing.JTextField namapegawai;
    private javax.swing.JTextField nohp;
    private javax.swing.JButton simpandata;
    private javax.swing.JButton simpanperubahan;
    private javax.swing.JTable tabelPegawai;
    // End of variables declaration//GEN-END:variables

}
